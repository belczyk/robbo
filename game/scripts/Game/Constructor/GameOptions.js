// Generated by CoffeeScript 1.7.1
(function() {
  var app, _ref;

  window.app = (_ref = window.app) != null ? _ref : {};

  app = window.app;

  app.GameDesigner = (function() {
    function GameDesigner() {
      this.gameName = ko.observable();
      this.planetName = ko.observable();
      this.lives = ko.observable();
      this.bolts = ko.observable();
      this.width = ko.observable();
      this.height = ko.observable();
      this.optionsPanel = $('.options-panel');
      ko.applyBindings(this, $('.game-designer')[0]);
      $('.has-tooltip').tooltip();
    }

    GameDesigner.prototype.saveGame = function() {
      $('.save-game').text('Saving...');
      $.ajax({
        url: app.ConstructorConfig.serverAddress + "/api/robbo",
        data: app.Universe,
        type: "POST",
        success: function() {
          return setTimeout((function() {
            return $('.save-game').text('Save game');
          }), 200);
        }
      });
    };

    GameDesigner.prototype.newGame = function() {
      var name, planet;
      name = "Game " + (app.Universe.Games.length + 1);
      planet = this.createPlanet();
      planet.Name += " 1";
      app.Universe.Games.push({
        Name: name,
        StartingNumberOfLives: 9,
        Planets: [planet]
      });
      app.GameLoader.loadGamesConfig();
      app.GameLoader.selectGame(app.Universe.Games.length - 1);
      this.load();
    };

    GameDesigner.prototype.removePlanet = function() {
      if (app.GameLoader.currentPlanet() == null) {
        return;
      }
      if (!confirm("Are you sure you want remove current planet?")) {
        return;
      }
      app.Universe.Games[app.GameLoader.currentGame()].Planets.splice(app.GameLoader.currentPlanet(), 1);
      return app.GameLoader.loadGamesConfig();
    };

    GameDesigner.prototype.removeGame = function() {
      if (app.GameLoader.currentGame() === "0") {
        alert("You can't remove original game");
        return;
      }
      if (!confirm("Are you sure you want remove current game?")) {
        return;
      }
      app.Universe.Games.splice(app.GameLoader.currentGame(), 1);
      return app.GameLoader.loadGamesConfig();
    };

    GameDesigner.prototype.toggleOptions = function(x, e) {
      if (this.optionsPanel.is(':visible')) {
        this.optionsPanel.hide('blind');
        $(e.target).find('i').removeClass('glyphicon-chevron-up');
        return $(e.target).find('i').addClass('glyphicon-chevron-down');
      } else {
        this.optionsPanel.show('blind');
        $(e.target).find('i').removeClass('glyphicon-chevron-down');
        return $(e.target).find('i').addClass('glyphicon-chevron-up');
      }
    };

    GameDesigner.prototype.createPlanet = function() {
      var line, lines, planet, x, y, _i, _j;
      planet = {
        BoltsToBeCollected: 5,
        Name: "Planet",
        Map: ""
      };
      lines = [];
      for (x = _i = 0; _i <= 31; x = ++_i) {
        line = "";
        for (y = _j = 0; _j <= 16; y = ++_j) {
          line += "_..";
        }
        lines.push(line);
      }
      planet.Map = lines.join("\n");
      return planet;
    };

    GameDesigner.prototype.newPlanet = function() {
      var game, gameN, planet;
      gameN = app.GameLoader.currentGame();
      planet = this.createPlanet();
      game = app.Universe.Games[app.GameLoader.currentGame()];
      planet.Name += " " + (game.Planets.length + 1);
      game.Planets.push(planet);
      app.GameLoader.loadGamesConfig();
      app.GameLoader.selectGame(gameN);
      app.GameLoader.selectPlanet(game.Planets.length - 1);
      return this.load();
    };

    GameDesigner.prototype.testPlanet = function() {
      return window.open("robbo.html?game=" + (app.GameLoader.currentGame()) + "&planet=" + (app.GameLoader.currentPlanet()), "_blank");
    };

    GameDesigner.prototype.load = function() {
      var game, planet;
      game = app.Universe.Games[$('.games').val()];
      planet = game.Planets[$('.planets').val()];
      this.width(app.MapLoader.getWidth(planet.Map));
      this.height(app.MapLoader.getHeight(planet.Map));
      this.planetName(planet.Name);
      this.gameName(game.Name);
      this.bolts(planet.BoltsToBeCollected);
      return this.lives(game.StartingNumberOfLives);
    };

    return GameDesigner;

  })();

}).call(this);
