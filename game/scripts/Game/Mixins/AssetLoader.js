// Generated by CoffeeScript 1.7.1
(function() {
  var app, _ref;

  window.app = (_ref = window.app) != null ? _ref : {};

  app = window.app;

  app.AssetLoader = (function() {
    function AssetLoader() {}

    AssetLoader.assets = {};

    AssetLoader.width = 32;

    AssetLoader.height = 32;

    AssetLoader.getAsset = function(name) {
      var asset, _ref1;
      if ((_ref1 = app.ColorTranslation) != null ? _ref1.isChanged : void 0) {
        this.assets = {};
        app.ColorTranslation.isChanged = false;
      }
      asset = this.assets[name];
      if (asset == null) {
        this.assets[name] = this.loadAsset(name);
      }
      return this.assets[name];
    };

    AssetLoader.loadAsset = function(name) {
      var asset, color, colorNum, ctx, i, imageData, x, y, _i, _j;
      ctx = $('.assetLoad').get(0).getContext('2d');
      imageData = ctx.createImageData(this.width, this.height);
      asset = app.Assets[name];
      for (y = _i = 0; _i <= 31; y = ++_i) {
        for (x = _j = 0; _j <= 31; x = ++_j) {
          colorNum = asset[y][x];
          color = app.ColorTranslation[colorNum];
          i = y * 32 + x;
          this.setPixel(imageData, i, color.to);
        }
      }
      return imageData;
    };

    AssetLoader.getPixel = function(data, n) {
      return [data.data[n * 4], data.data[n * 4 + 1], data.data[n * 4 + 2], data.data[n * 4 + 3]];
    };

    AssetLoader.compareColor = function(col1, col2) {
      return col1[0] === col2[0] && col1[1] === col2[1] && col1[2] === col2[2] && col1[3] === col2[3];
    };

    AssetLoader.setPixel = function(data, n, color) {
      var i, _i, _results;
      _results = [];
      for (i = _i = 0; _i <= 3; i = ++_i) {
        _results.push(data.data[n * 4 + i] = color[i]);
      }
      return _results;
    };

    return AssetLoader;

  })();

}).call(this);
